{"pageProps":{"note":{"id":"noH1GXwFDSoD6OQEEtqJ5","title":"Cook","desc":"","updated":1679961345563,"created":1641166829242,"custom":{},"fname":"music.reaper.cook","type":"note","vault":{"fsPath":"../main/thoughts-on","name":"thoughts-on"},"contentHash":"20fae77002a9135ff9d38a3039665373","links":[{"type":"wiki","from":{"fname":"music.reaper.cook","id":"noH1GXwFDSoD6OQEEtqJ5","vaultName":"thoughts-on"},"value":"music.engineering.mixing.compressor.techniques","alias":"side-chain compression Dendron note","position":{"start":{"line":45,"column":7,"offset":2033},"end":{"line":45,"column":115,"offset":2141},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"music.engineering.mixing.compressor.techniques","anchorHeader":"sidechain-compression"}},{"type":"wiki","from":{"fname":"music.reaper.cook","id":"noH1GXwFDSoD6OQEEtqJ5","vaultName":"thoughts-on"},"value":"music.engineering.recording","alias":"phase cancellation","position":{"start":{"line":61,"column":245,"offset":3431},"end":{"line":61,"column":303,"offset":3489},"indent":[]},"xvault":false,"sameFile":false,"to":{"fname":"music.engineering.recording","anchorHeader":"phasing"}}],"anchors":{"install-extensions":{"type":"header","text":"Install extensions","value":"install-extensions","line":8,"column":0,"depth":3},"recording":{"type":"header","text":"Recording","value":"recording","line":11,"column":0,"depth":2},"loop-recording-with-pre-roll-each-time":{"type":"header","text":"Loop recording with pre-roll each time","value":"loop-recording-with-pre-roll-each-time","line":12,"column":0,"depth":3},"render-midi-record-the-output-of-one-track-to-another":{"type":"header","text":"Render MIDI: Record the output of one track to another","value":"render-midi-record-the-output-of-one-track-to-another","line":25,"column":0,"depth":3},"use-computer-keyboard-as-midi-controller":{"type":"header","text":"Use computer keyboard as MIDI controller","value":"use-computer-keyboard-as-midi-controller","line":35,"column":0,"depth":3},"record-output-from-mac-to-a-track-in-reaper":{"type":"header","text":"Record output from Mac to a track in Reaper","value":"record-output-from-mac-to-a-track-in-reaper","line":41,"column":0,"depth":3},"automation-for-media-item":{"type":"header","text":"Automation for media item","value":"automation-for-media-item","line":46,"column":0,"depth":3},"editing":{"type":"header","text":"Editing","value":"editing","line":49,"column":0,"depth":2},"side-chain-compression":{"type":"header","text":"Side-chain compression","value":"side-chain-compression","line":50,"column":0,"depth":3},"check-if-sound-is-mono-or-stereo":{"type":"header","text":"Check if sound is mono or stereo","value":"check-if-sound-is-mono-or-stereo","line":66,"column":0,"depth":3}},"children":[],"parent":"WQn9GUdw3zRQ5udGR1slP","data":{}},"body":"<h1 id=\"cook\">Cook<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#cook\"></a></h1>\n<h3 id=\"install-extensions\">Install extensions<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#install-extensions\"></a></h3>\n<p>Simply drag the <code>.dylib</code> file into <code>~/Library/Application Support/REAPER/UserPlugins</code></p>\n<h2 id=\"recording\">Recording<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#recording\"></a></h2>\n<h3 id=\"loop-recording-with-pre-roll-each-time\">Loop recording with pre-roll each time<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#loop-recording-with-pre-roll-each-time\"></a></h3>\n<p>This will allow us to loop record while being able to hear the part that comes before the actual section to be recorded <em>on each iteration of the loop</em></p>\n<ul>\n<li><a href=\"https://reaperblog.net/2021/08/loop-rec-pre-roll/#:~:text=Pre%2DRoll%20is%20when%20you,looping%20there%27s%20no%20pre%2Droll.\">source</a></li>\n</ul>\n<ol>\n<li>Disable options > Loop points linked to time selection</li>\n<li>Record mode > time selection auto punch</li>\n<li>Enable options > new recording that overlaps existing media items > splits items and creates new takes</li>\n</ol>\n<ul>\n<li>already enabled by default</li>\n</ul>\n<ol start=\"4\">\n<li>Set monitoring mode of the track to <em>Monitor input (Tape auto style)</em> (so we don't hear the previous take during the pre-roll)</li>\n<li>Drag in a ruler for the whole section including the pre-roll</li>\n<li>Create a time selection in the area you want to record into</li>\n<li>Metronome settings - <em>count-in</em> turned off, <em>pre-roll before recording</em> turned off</li>\n</ol>\n<h3 id=\"render-midi-record-the-output-of-one-track-to-another\">Render MIDI: Record the output of one track to another<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#render-midi-record-the-output-of-one-track-to-another\"></a></h3>\n<p>Imagine we have a MIDI track with some VSTi plugin (origin track), and want to get the soundwaves of that output onto a new track (destination track).</p>\n<ol>\n<li>On the destination track, enable:</li>\n</ol>\n<ul>\n<li><em>Monitor Input</em></li>\n<li><em>Record Output</em> > <em>Record Output (stereo)</em></li>\n<li><em>Record Output</em> > <em>Output mode: post-fader</em></li>\n</ul>\n<ol start=\"2\">\n<li>On the destination track, add the origin track(s) as a <em>receives</em></li>\n<li>Record</li>\n</ol>\n<h3 id=\"use-computer-keyboard-as-midi-controller\">Use computer keyboard as MIDI controller<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#use-computer-keyboard-as-midi-controller\"></a></h3>\n<ol>\n<li>Enable Input Monitoring on the track</li>\n<li>Input: MIDI: Virtual MIDI Keyboard > All channels</li>\n<li>View > Virtual MIDI Keyboard (<code>opt+b</code>)</li>\n<li>Arm track for recording</li>\n</ol>\n<h3 id=\"record-output-from-mac-to-a-track-in-reaper\">Record output from Mac to a track in Reaper<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#record-output-from-mac-to-a-track-in-reaper\"></a></h3>\n<p>Useful for instance if we find a Sitar drone track on Youtube that you want to insert as a track into the project</p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=BzIwPV1b8M8\">https://www.youtube.com/watch?v=BzIwPV1b8M8</a></li>\n</ul>\n<h3 id=\"automation-for-media-item\">Automation for media item<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#automation-for-media-item\"></a></h3>\n<p>In the FX, hit <code>param</code> > <code>show media item take envelope</code></p>\n<h2 id=\"editing\">Editing<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#editing\"></a></h2>\n<h3 id=\"side-chain-compression\">Side-chain compression<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#side-chain-compression\"></a></h3>\n<ul>\n<li>see <a href=\"/notes/2ac3ex5vvidpf4v3qdozndp#sidechain-compression\">side-chain compression Dendron note</a></li>\n</ul>\n<p>example use-case: vocals cause the guitar to duck</p>\n<ol>\n<li>on the track we want to compress (guitar), open routing</li>\n<li>specify 4 track channels </li>\n</ol>\n<ul>\n<li>if you also want, say, a violin lead track to compress the guitar, then add 2 more channels</li>\n</ul>\n<ol start=\"3\">\n<li>set a new receive from the track that will trigger the compression (lead vocal track)</li>\n</ol>\n<ul>\n<li>this receive should be post-fader</li>\n<li>it should receive the vocal signal to channels 3 and 4 of our compressed track (guitar)</li>\n</ul>\n<ol start=\"4\">\n<li>add the compressor onto the compressed track (guitar)</li>\n</ol>\n<ul>\n<li>open Plug-in pin connector and ensure Main Inputs are set to Channel 1 and Channel 2 (left and right, respectively), and that Left and Right Auxiliary inputs are set to the Receives from Channels 3 and 4, respectively. Compressed Output 1 should be Channel 1 and Compressed output 2 should be Channel 2. These settings are default.</li>\n</ul>\n<ol start=\"5\">\n<li>In our compression plugin, set it to be triggered by the auxiliary input</li>\n</ol>\n<ul>\n<li>in ReaComp, find the <em>detector input</em> dropdown and select <em>Auxiliary inputs</em></li>\n</ul>\n<h3 id=\"check-if-sound-is-mono-or-stereo\">Check if sound is mono or stereo<a aria-hidden=\"true\" class=\"anchor-heading icon-link\" href=\"#check-if-sound-is-mono-or-stereo\"></a></h3>\n<p>Even though a media item may have 2 channels, it may not actually be stereo. We can check this by reversing the polarity of one of the channels, and panning both channels to center. If it's actually a mono sound, we won't hear anything, due to <a href=\"/notes/v024fy7zj6c5jko7lk83t1h#phasing\">phase cancellation</a>.</p>\n<ul>\n<li>use plugin <em>JS: Stereo Channel Volume/Pan/Polarity</em></li>\n</ul>","noteIndex":{"id":"8qvi4S0Dk1BAaCLhfHqAp","title":"Second Brain","desc":"","updated":1672111562730,"created":1616360437888,"custom":{"nav_order":0,"permalink":"/"},"fname":"root","type":"note","vault":{"fsPath":"../main/thoughts-on","name":"thoughts-on"},"contentHash":"dd394dade3f08feaa5cf4d1caeb1c991","links":[],"anchors":{"tags":{"type":"header","text":"Tags","value":"tags","line":12,"column":0,"depth":3}},"children":["8aPvLrwcPnxcTwx7PdvXW","l9ldUruxqRBZwMij5KlS5","xWh3SS0J1hvRSZ7g4LvEE","cc5kdn5ay8omhcud9hjfpyk","9jNuGCXVuFaZOGZfLpKi5","mhlpKRrfT0qlXzTaapFYZ","QU1tbQ4KX64UBCWtCxAcR","U4tQLU5tRHqr9e7H3G4Gm","PvcIkEJcDtcv7luF2mBIU","2wW5Kxk794H9mfnu9VPA8","iwANjkbi3nbIovlVpepWm","XYgvsgvjzgoyvY6KAEu5Y","pT9wnWnS42pFId9UIH5he","gmXZ6Xy8f8FFQ66Z5DYqh","CjV6QXVHIqQTuZTSlSSlB","IgbLitAU1k0ioGhuvmjjS","D42jFbx0vNlT7S6QRb5ee","dFs5zopMmrh3rPgQaSkyP","W0AgEfoTzJ8VxVE4QqhSL","ggU4P3K1OhUlHBJbpgHiD","vtu2srTzCfoNUHv0Xcbxn","6kuwlrc3PT5JoQS9xZWZW","qoZ6e9KsYPestYFpO4Ce4","GPH8BieqB4dtqul80gJvX","MbW1wF5mIZ7g3DPXrOSyZ","Ay9vOAmvV8ODJFpaEkw6J","8Pi3wPs4LTxlAEOUE48Te","SDd8268l79j2cnvCVVl8F","zI5rK8mFkNghzLgbQD6ox","zCwMY5ckgKAqstOhw2Drd","i5Fya3Vzzm0rBT0ctByuo","YDbL8QXchj03NvTIZOdrk","km4fy13hx9puopyjr1ajdgj","WdAyuDkIi16pl1pnaopzx","15ax6k6x106sotobkyn3jqp","sgu2QxqDGup93hJPx8RJd","mT663nw5DUEaEGzXI98yD","Dyg6bFtxE0UkB7gz6pqzq","cn1x9vhdapyt1fvgtvfekea","0aYhvzCfaIxLaNhqNCV9Q","q9NskCGxFGNQwBDcsgNkY","wAdoBPUMHEFJkm6XVlHXW","sCYBuXnSNA259MDwhakmv","YgQusR9D6RbBgdkLuJuDh","ovHaNSb3tnl2LTdV7wwau","eqklm05q2g46ikqaqv9ijh9","8TJC5FfwKtfmH4GfOZVoO","9rKIOn3BV7ZU1FFlJxmvC","rsrE9vBXK0ehNkbEjltlZ","XTkKLi0Jg1imZ2lbhgOrv","4Fuw6OHQ5uhEVCUfXDfkb","pUEyedPYYlNSVLuiUSnge","KtoCw0HFEddGJ7GuW7GnN","BoxZ36iWEbUoRProxPo4D","gCmclfAHAt1tEcFDc24eD","TNhxyx7GEdGDM0PBI08b1","guyW7WWQNDGDALFV7tO57","YeEWZtb7FWvYTyJwF7zhR","DUrXQvolf76ILMKJm4Zt6","Jo4jAQcwgxsdxkcxUceR4","X6yPFUKIjs6tENQ3uNzE2","aRSv8qoJLyeE6xDAAUYpU","jwb0toyj23byc7krttp0l8k","ztqrUgUYssC0FAWDGZxWF","d7evrjgli013nul3mosquea","mvBLIZW424WZ5mCmjKQaB","YoV6c5CmpHYNEuYU4PsgH","JQzF2iPfQ2897j6HFCoY9","TicwTJD2oaTpncpPy93s2","KiGGs6PmvIlIt50r2tF2O","4TiqSFRd4hD0e5tyHbf4d","8F9H6GIButHtrFKXHzZFu","t5CaAEDQFRutGrV0ru97d","het26IMKUnKB7npru8tG4","GgRKYXklrXEAs9u15sOM9","PPvKHQNulUEvXEitqAZxM","SMGOfSTElTkJBezhNvkZ6","358nLIVsR9zmItfuBCWq2","xewZxeuhzI7qMvoYdcnLM","FAAtgk8cbuownxuv0Vlou","64N1mdh3JWL1WOv1dilYD","aCd3q2zSzgQnHKi1vOJFj","kh7Y1bQw7Om31yurE4CrW","5162x506d5mgwkn07plcuo3","LGnyEtwA1LlztJJwEpg6l","zoJRWH59vBCpqnm8fOpis","xlg9pngfxviby5z2qfcfpcv","G6zDrHf3Ua8R7vllalBc5","NrjfBxxDU92ByYSIJjgDM","zNcMG5nj1t69zkAFnvn5S","JIHQPGBUDqAEPzbhfFxlc","MmjHaByLtYx5sv2HzXnWd"],"parent":null,"data":{},"body":"\nWelcome to my Second Brain! Here you'll find thoughts, lessons, facts and any other interesting musings that I've come across or thought up over the years. A lot of what I have gathered over the years are originally from the minds of others, while some are my own. Some may be outdated and no longer reflect my current views. Some may contain misinformation, though I try to be rigorous with my additions. You can think of it as my personal wiki.\n\nThis Dendron vault is the sister component to the [Tech-focused Digital Garden](https://tech.kyletycholiz.com)\n\n### Tags\nThroughout the Second Brain, I have made use of tags, which give semantic meaning to the pieces of information.\n\n- `ex.` - Denotes an *example* of the preceding piece of information\n- `spec:` - Specifies that the preceding information has some degree of *speculation* to it, and may not be 100% factual. Ideally this gets clarified over time as my understanding develops.\n- `anal:` - Denotes an *analogy* of the preceding information. Often I will attempt to link concepts to others that I have previously learned.\n- `mn:` - Denotes a *mnemonic*\n- `expl:` - Denotes an *explanation*"},"collectionChildren":null,"customHeadContent":null,"config":{"version":5,"dev":{"enablePreviewV2":true},"commands":{"lookup":{"note":{"selectionMode":"extract","confirmVaultOnCreate":false,"leaveTrace":false,"bubbleUpCreateNew":true,"fuzzThreshold":0.2,"vaultSelectionModeOnCreate":"smart"}},"insertNote":{"initialValue":"templates"},"insertNoteLink":{"aliasMode":"none","enableMultiSelect":false},"insertNoteIndex":{"enableMarker":false},"randomNote":{},"copyNoteLink":{"aliasMode":"title"},"templateHierarchy":"template"},"workspace":{"dendronVersion":"0.83.0","vaults":[{"fsPath":"../main/thoughts-on","name":"thoughts-on"}],"journal":{"dailyDomain":"daily","name":"journal","dateFormat":"y.MM.dd","addBehavior":"childOfDomain"},"scratch":{"name":"scratch","dateFormat":"y.MM.dd.HHmmss","addBehavior":"asOwnDomain"},"graph":{"zoomSpeed":1,"createStub":false},"enableAutoCreateOnDefinition":false,"enableXVaultWikiLink":false,"enableRemoteVaultInit":true,"workspaceVaultSyncMode":"noCommit","enableAutoFoldFrontmatter":true,"maxPreviewsCached":10,"maxNoteLength":204800,"task":{"name":"","dateFormat":"","addBehavior":"childOfCurrent","statusSymbols":{"":" ","wip":"w","done":"x","assigned":"a","moved":"m","blocked":"b","delegated":"l","dropped":"d","pending":"y"},"prioritySymbols":{"H":"high","M":"medium","L":"low"},"todoIntegration":false,"createTaskSelectionType":"selection2link","taskCompleteStatus":["done","x"]},"enableUserTags":true,"enableHashTags":true,"enableEditorDecorations":true,"enableFullHierarchyNoteTitle":false},"preview":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enableMermaid":true,"enablePrettyRefs":true,"enableKatex":true,"automaticallyShowPreview":false,"enableFrontmatterTags":true,"enableHashesForFMTags":false},"publishing":{"enableFMTitle":true,"enableNoteTitleForLink":true,"enablePrettyRefs":true,"enableKatex":true,"copyAssets":true,"siteHierarchies":["root"],"writeStubs":false,"siteRootDir":"docs","seo":{"title":"Dendron","description":"The non-Tech Second Brain of Kyle Tycholiz"},"github":{"cname":"thoughts.kyletycholiz.com","enableEditLink":true,"editLinkText":"Edit this page on GitHub","editBranch":"master","editViewMode":"tree"},"enableSiteLastModified":true,"enableFrontmatterTags":true,"enableHashesForFMTags":false,"enableRandomlyColoredTags":true,"enableTaskNotes":true,"enablePrettyLinks":true,"searchMode":"lookup","enableMermaid":true,"siteUrl":"https://thoughts.kyletycholiz.com","duplicateNoteBehavior":{"action":"useVault","payload":["thoughts-on"]},"siteFaviconPath":"favicon.ico","siteIndex":"root"}}},"__N_SSG":true}